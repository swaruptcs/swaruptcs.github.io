{"version":3,"sources":["hooks/useLocationHierarchy.js","components/DeviceModal.jsx","components/Stats.jsx","components/StoresGauge.jsx","components/Chart.jsx","components/ProblemAgingChart.jsx","components/StoresWiseChart.jsx","components/DeviceWiseChart.jsx","components/OfflineStoreGauge.jsx","components/OmsStatus.jsx","hooks/useStats.js","components/Dashboard.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["useLocationHierarchy","zones","areas","stores","Header","Modal","Content","Actions","Row","Table","HeaderCell","TableHeader","Cell","Body","DeviceModal","open","onClose","data","dimmer","closeIcon","color","celled","Button","onClick","Card","Stats","useState","setOpen","selectedDevice","setSelectedDevice","props","useSprings","length","map","from","value","name","Group","itemsPerRow","index","raised","key","link","handleCardClick","header","className","p","interpolate","val","Math","floor","StoresGauge","totalStores","id","nrOfLevels","percent","colors","arcWidth","arcsLength","arcPadding","textColor","style","width","height","ChartJS","defaults","scale","gridLines","drawOnChartArea","Chart","type","options","backgroundColor","convasElement","useRef","useEffect","chartInstance","current","destroy","ref","background","ProblemAgingChart","labels","datasets","label","event","item","scales","yAxes","ticks","beginAtZero","responsive","layout","padding","StoresWiseChart","devicePerStore","device","setDevice","deviceDropDown","text","daysDropDown","Dropdown","placeholder","selection","compact","defaultValue","onChange","marginLeft","devicePerStoreDay","devicePerStoreDays","DeviceWiseChart","Date","startDate","setStartDate","store","setStore","storeDropDown","CustomButton","basic","selected","date","customInput","search","OfflineStoreGauge","textAlign","hideText","paddingLeft","Popup","Item","List","OmsStatus","trigger","position","Label","useStats","zoneId","areaId","storeId","stats","Column","Grid","Dashboard","statsData","borderRight","Home","selectedZone","setSelectedZone","selectedArea","setSelectedArea","selectedStore","setSelectedStore","areaDropDown","setAreaDropDown","setStoreDropDown","zoneDropDown","panes","menuItem","render","Tab","Pane","attached","clearable","filter","additionLabel","menu","secondary","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba960404.chunk.js","sourcesContent":["import zones from '../data/zones.json';\nimport areas from '../data/areas.json';\nimport stores from '../data/stores.json';\n\nconst useLocationHierarchy = () => {\n  return { zones, areas, stores };\n};\n\nexport default useLocationHierarchy;\n","import React from 'react';\nimport { Modal, Button, Table } from 'semantic-ui-react';\n\nconst { Header, Content, Actions } = Modal;\nconst { Row, HeaderCell, Header: TableHeader, Cell, Body } = Table;\n\nconst DeviceModal = ({ open, onClose, data }) => {\n  return (\n    <Modal dimmer=\"inverted\" open={open} onClose={onClose} closeIcon>\n      <Header>{data}</Header>\n      <Content>\n        <Table color=\"blue\" celled>\n          <TableHeader>\n            <Row>\n              <HeaderCell>Area</HeaderCell>\n              <HeaderCell>Store</HeaderCell>\n              <HeaderCell>IP</HeaderCell>\n            </Row>\n          </TableHeader>\n          <Body>\n            <Row>\n              <Cell>Area 22</Cell>\n              <Cell>543-New Malden</Cell>\n              <Cell>xxx.xxx.xxx.xxx</Cell>\n            </Row>\n            <Row>\n              <Cell>Area 22</Cell>\n              <Cell>535-Balham</Cell>\n              <Cell>xxx.xxx.xxx.xxx</Cell>\n            </Row>\n          </Body>\n        </Table>\n      </Content>\n      <Actions>\n        <Button onClick={onClose}>Close</Button>\n      </Actions>\n    </Modal>\n  );\n};\n\nexport default DeviceModal;\n","import React, { useState } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { animated, useSprings } from 'react-spring';\n\nimport DeviceModal from './DeviceModal';\n\nconst { Content } = Card;\n\nconst Stats = ({ data }) => {\n  const [open, setOpen] = useState(false);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const props = useSprings(\n    data.length,\n    data.map(({ value, name }) => ({\n      from: { value: 0 },\n      value,\n      name,\n    }))\n  );\n\n  const handleCardClick = (name) => {\n    setSelectedDevice(name);\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <DeviceModal\n        open={open}\n        onClose={handleModalClose}\n        data={`Stores with problems in ${selectedDevice}`}\n      />\n      <Card.Group itemsPerRow={data.length}>\n        {props.map(({ name, value }, index) => (\n          <Card\n            raised\n            key={index}\n            link\n            onClick={() => handleCardClick(name.value)}\n          >\n            <Content header={name.value} className=\"card-header\" />\n            <Content className=\"card-content\">\n              <animated.p>\n                {value.interpolate((val) => Math.floor(val))}\n              </animated.p>\n            </Content>\n          </Card>\n        ))}\n      </Card.Group>\n    </>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport GaugeChart from 'react-gauge-chart';\n\nconst StoresGauge = ({ data }) => {\n  return (\n    <div className=\"store-gauge-container\">\n      {data.map(({ value, totalStores }, index) => (\n        <GaugeChart\n          id={`gauge-chart${index}`}\n          className=\"store-gauge\"\n          key={index}\n          nrOfLevels={3}\n          percent={value / totalStores}\n          colors={['#32CD32', '#FFBF00', '#FD0D0D']}\n          arcWidth={0.4}\n          arcsLength={[0.1, 0.3, 0.6]}\n          arcPadding={0.02}\n          textColor=\"black\"\n          style={{ width: '20%', height: 1 }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default StoresGauge;\n","import React, { useRef, useEffect } from 'react';\nimport ChartJS from 'chart.js';\n\nChartJS.defaults.scale.gridLines.drawOnChartArea = false;\n\nconst Chart = ({ type, data, options, backgroundColor }) => {\n  const convasElement = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = new ChartJS(convasElement.current, {\n      type,\n      data,\n      options,\n    });\n    return () => {\n      chartInstance.destroy();\n    };\n  }, [data, options, type]);\n\n  return (\n    <div>\n      <canvas\n        ref={convasElement}\n        style={{ background: backgroundColor }}\n        width=\"100%\"\n        height=\"60px\"\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from './Chart';\n\nconst ProblemAgingChart = () => {\n  const labels = ['Till', 'Tablet', 'Phone', 'Wi-Fi', 'Printer'];\n  const maxAgeData = [2, 3, 4, 5, 6];\n  const minAgeData = [5, 4, 1, 2, 3];\n\n  const props = {\n    type: 'bar',\n    data: {\n      labels,\n      datasets: [\n        {\n          label: 'Max Age(Days)',\n          data: maxAgeData,\n          backgroundColor: '#FF6666',\n        },\n        {\n          label: 'Min Age(Days)',\n          data: minAgeData,\n          backgroundColor: '#1E90FF',\n        },\n      ],\n    },\n    options: {\n      onClick: (event, item) => {},\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      responsive: true,\n      layout: {\n        padding: 10,\n      },\n    },\n  };\n\n  return (\n    <div className=\"chart-size\">\n      <h3>Problem Aging</h3>\n      <Chart {...props} />\n    </div>\n  );\n};\n\nexport default ProblemAgingChart;\n","import React, { useState } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nimport Chart from './Chart';\n\nimport devicePerStore from '../data/device-per-store.json';\nimport devicePerStoreDays from '../data/device-per-store-days.json';\n\nconst StoresWiseChart = () => {\n  const [selectedDevice, setSelectedDevice] = useState('Till');\n  const [device, setDevice] = useState(devicePerStore[selectedDevice]);\n\n  const labels = [543, 358, 898, 390, 703];\n  const deviceDropDown = [\n    { key: 1, text: 'Till', value: 'Till' },\n    { key: 2, text: 'Tablet', value: 'Tablet' },\n    { key: 3, text: 'Phone', value: 'Phone' },\n    { key: 4, text: 'Wi-Fi', value: 'Wi-Fi' },\n    { key: 5, text: 'Printer', value: 'Printer' },\n  ];\n  const daysDropDown = [\n    { key: 1, text: 'Last 10 Days', value: 1 },\n    { key: 2, text: 'Last 15 Days', value: 2 },\n    { key: 3, text: 'Last 30 Days', value: 3 },\n  ];\n\n  const props = {\n    type: 'bar',\n    data: {\n      labels,\n      datasets: [\n        {\n          label: `Device - ${selectedDevice}`,\n          data: device,\n          backgroundColor: '#A569BD',\n        },\n      ],\n    },\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      responsive: true,\n      layout: {\n        padding: 10,\n      },\n    },\n  };\n\n  const handleDeviceChange = (event, { value }) => {\n    setSelectedDevice(value);\n    setDevice(devicePerStore[value]);\n  };\n\n  const handleDayChange = (event, { value }) => {\n    const devicePerStoreDay = devicePerStoreDays[value];\n    setDevice(devicePerStoreDay[selectedDevice]);\n  };\n\n  return (\n    <div className=\"chart-size\">\n      <h3>Top 5 Impacted Stores</h3>\n      <Chart {...props} />\n      <div className=\"chart-header-container\">\n        <Dropdown\n          placeholder=\"Device\"\n          selection\n          compact\n          options={deviceDropDown}\n          style={{ width: '30%' }}\n          defaultValue={deviceDropDown[0].value}\n          onChange={handleDeviceChange}\n        />\n        <Dropdown\n          placeholder=\"Days\"\n          selection\n          compact\n          options={daysDropDown}\n          style={{ width: '45%', marginLeft: '.2rem' }}\n          defaultValue={daysDropDown[0].value}\n          onChange={handleDayChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StoresWiseChart;\n","import React, { useState } from 'react';\nimport { Dropdown, Button } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\n\nimport stores from '../data/stores.json';\n\nimport Chart from './Chart';\n\nconst DeviceWiseChart = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [store, setStore] = useState(241);\n\n  const labels = ['Till', 'Tablet', 'Phone', 'Wi-Fi', 'Printer'];\n  const maxAgeData = [12, 3, 7, 5, 11];\n\n  const storeDropDown = stores.map(({ id, name }, index) => ({\n    key: index,\n    text: `${id}-${name}`,\n    value: id,\n  }));\n\n  const props = {\n    type: 'bar',\n    data: {\n      labels,\n      datasets: [\n        {\n          label: `Store - ${store}`,\n          data: maxAgeData,\n          backgroundColor: '#F5B041',\n        },\n      ],\n    },\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      responsive: true,\n      layout: {\n        padding: 10,\n      },\n    },\n  };\n\n  const CustomButton = ({ onClick, value }) => (\n    <Button basic onClick={onClick}>\n      {value}\n    </Button>\n  );\n\n  return (\n    <div className=\"chart-size\">\n      <h3>Top 20 Stores</h3>\n      <Chart {...props} />\n      <div className=\"chart-header-container\">\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => {\n            setStartDate(date);\n          }}\n          customInput={<CustomButton />}\n        />\n        <Dropdown\n          placeholder=\"Store\"\n          selection\n          compact\n          search\n          options={storeDropDown}\n          style={{ width: '60%' }}\n          defaultValue={storeDropDown[0].value}\n          onChange={(event, { value }) => setStore(value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DeviceWiseChart;\n","import React from 'react';\nimport GaugeChart from 'react-gauge-chart';\n\nconst OfflineStoreGauge = () => {\n  return (\n    <>\n      <h3 style={{ textAlign: 'center' }}>Top 20 Stores</h3>\n      <GaugeChart\n        id=\"gauge-chart-offline\"\n        className=\"store-gauge\"\n        nrOfLevels={3}\n        percent={0.83}\n        colors={['#FD0D0D', '#FFBF00', '#32CD32']}\n        arcWidth={0.4}\n        textColor=\"black\"\n        hideText\n        style={{\n          width: '100%',\n          height: 1,\n        }}\n      />\n      <h3 style={{ textAlign: 'center' }}>Store Offline Information</h3>\n      <ul style={{ paddingLeft: '1rem' }}>\n        <li>543 New Malden – 10:00am to 11:00am</li>\n      </ul>\n    </>\n  );\n};\n\nexport default OfflineStoreGauge;\n","import React from 'react';\nimport { Popup, Label, List } from 'semantic-ui-react';\n\nconst { Header, Content } = Popup;\nconst { Item } = List;\n\nconst OmsStatus = () => {\n  return (\n    <>\n      <h3 style={{ textAlign: 'center' }}>OMS Status</h3>\n      <div className=\"oms-section\">\n        <div className=\"first-row\">\n          <div>\n            <span>N</span>\n          </div>\n        </div>\n        <div className=\"second-row\">\n          <div>\n            <span>W</span>\n          </div>\n          <div></div>\n          <div>\n            <span>E</span>\n          </div>\n        </div>\n        <div className=\"third-row\">\n          <Popup\n            trigger={\n              <div>\n                <span>S</span>\n              </div>\n            }\n            position=\"right center\"\n          >\n            <Header>Impacted stores</Header>\n            <Content>\n              <List>\n                <Item>\n                  <Label>217-Kingston On Thames</Label>\n                </Item>\n                <Item>\n                  <Label>241-Putney</Label>\n                </Item>\n                <Item>\n                  <Label>358-Chiswick</Label>\n                </Item>\n              </List>\n            </Content>\n          </Popup>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OmsStatus;\n","import stats from '../data/stats.json';\n\nconst useStats = ({ zoneId, areaId, storeId }) => {\n  if (zoneId === 4 && areaId === 31 && storeId === 543) {\n    return stats[`${zoneId}${areaId}${storeId}`];\n  }\n\n  if (zoneId === 4 && areaId === 31) {\n    return stats[`${zoneId}${areaId}`];\n  }\n\n  if (zoneId === 4) {\n    return stats[`${zoneId}`];\n  }\n\n  return stats['0'];\n};\n\nexport default useStats;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport StoresGauge from './StoresGauge';\nimport ProblemAgingChart from './ProblemAgingChart';\nimport StoresWiseChart from './StoresWiseChart';\nimport DeviceWiseChart from './DeviceWiseChart';\nimport OfflineStoreGauge from './OfflineStoreGauge';\nimport OmsStatus from './OmsStatus';\nimport useStats from '../hooks/useStats';\n\nconst { Column, Row } = Grid;\n\nconst Dashboard = ({ zoneId, areaId, storeId }) => {\n  const statsData = useStats({ zoneId, areaId, storeId });\n\n  return (\n    <>\n      <Grid>\n        <Row>\n          <Column width={3} style={{ borderRight: '1px solid #d5d5d7' }}>\n            <OmsStatus />\n            <OfflineStoreGauge />\n          </Column>\n          <Column width={13}>\n            <h3>Problem Devices</h3>\n            <Stats data={statsData} />\n            <h3>Stores Impacted</h3>\n            <StoresGauge data={statsData} />\n            <div className=\"chart-container\">\n              <ProblemAgingChart />\n              <StoresWiseChart />\n              <DeviceWiseChart />\n            </div>\n          </Column>\n        </Row>\n      </Grid>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport { Tab, Dropdown } from 'semantic-ui-react';\n\nimport useLocationHierarchy from '../hooks/useLocationHierarchy';\n\nimport Dashboard from './Dashboard';\n\nconst Home = () => {\n  const [selectedZone, setSelectedZone] = useState(null);\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [selectedStore, setSelectedStore] = useState(null);\n\n  const [areaDropDown, setAreaDropDown] = useState([]);\n  const [storeDropDown, setStoreDropDown] = useState([]);\n\n  const { zones, areas, stores } = useLocationHierarchy();\n\n  const allZones = [{ key: -1, text: 'All Zones', value: 0 }];\n\n  const zoneDropDown = zones.map(({ id, name }, index) => ({\n    key: index,\n    text: name,\n    value: id,\n  }));\n\n  const handleZoneChange = (event, { value }) => {\n    const filteredAreas = areas.filter(({ zoneId }) => zoneId === value);\n\n    const areaDropDown = filteredAreas.map(({ id, name }, index) => ({\n      key: index,\n      text: name,\n      value: id,\n    }));\n\n    setSelectedZone(value);\n    setSelectedArea(null);\n    setSelectedStore(null);\n    setAreaDropDown(areaDropDown);\n    setStoreDropDown([]);\n  };\n\n  const handleAreaChange = (event, { value }) => {\n    const filteredStores = stores.filter(\n      ({ zoneId, areaId }) => areaId === value && zoneId === selectedZone\n    );\n\n    const storeDropDown = filteredStores.map(({ id, name }, index) => ({\n      key: index,\n      text: `${id}-${name}`,\n      value: id,\n    }));\n\n    setSelectedArea(value);\n    setSelectedStore(null);\n    setStoreDropDown(storeDropDown);\n  };\n\n  const handleStoreChange = (event, { value }) => {\n    setSelectedStore(value);\n  };\n\n  const panes = [\n    {\n      menuItem: 'Dashboard',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Dashboard\n            zoneId={selectedZone}\n            areaId={selectedArea}\n            storeId={selectedStore}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Report',\n      render: () => <Tab.Pane attached={false}>Report</Tab.Pane>,\n    },\n  ];\n\n  return (\n    <>\n      <Dropdown\n        options={storeDropDown}\n        placeholder=\"Store\"\n        selection\n        className=\"filter-panel\"\n        search\n        clearable\n        onChange={handleStoreChange}\n      />\n      <Dropdown\n        options={areaDropDown}\n        selection\n        placeholder=\"Area\"\n        className=\"filter-panel\"\n        onChange={handleAreaChange}\n      />\n      <Dropdown\n        options={[...allZones, ...zoneDropDown]}\n        selection\n        placeholder=\"Zone\"\n        className=\"filter-panel\"\n        onChange={handleZoneChange}\n        additionLabel=\"All Zones\"\n      />\n      <Tab\n        menu={{\n          secondary: true,\n          className: 'tab-label',\n        }}\n        panes={panes}\n      ></Tab>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport Home from './components/Home';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './App.scss';\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}